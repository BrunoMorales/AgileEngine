{"ast":null,"code":"import _regeneratorRuntime from\"/Users/brunomorales/Documents/Personal/Agileengine/file-displayer/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/brunomorales/Documents/Personal/Agileengine/file-displayer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import AxiosClient from\"./AxiosClient\";import getToken from\"./TokenFetcher\";export var fetchImages=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(page){var _yield$getToken,token,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getToken();case 2:_yield$getToken=_context.sent;token=_yield$getToken.token;_context.prev=4;_context.next=7;return AxiosClient.get('/images',{params:{page:page},headers:{authorization:\"Bearer \".concat(token)}});case 7:response=_context.sent;return _context.abrupt(\"return\",response.data);case 11:_context.prev=11;_context.t0=_context[\"catch\"](4);throw Error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[4,11]]);}));return function fetchImages(_x){return _ref.apply(this,arguments);};}();export var fetchImageDetails=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var _yield$getToken2,token,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getToken();case 2:_yield$getToken2=_context2.sent;token=_yield$getToken2.token;_context2.prev=4;_context2.next=7;return AxiosClient.get(\"/images/\".concat(id),{headers:{authorization:\"Bearer \".concat(token)}});case 7:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](4);throw Error(_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[4,11]]);}));return function fetchImageDetails(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/brunomorales/Documents/Personal/Agileengine/file-displayer/src/utils/ImageFetcher.ts"],"names":["AxiosClient","getToken","fetchImages","page","token","get","params","headers","authorization","response","data","Error","fetchImageDetails","id"],"mappings":"qSAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAcA,MAAO,IAAMC,CAAAA,WAAW,0FAAG,iBAAOC,IAAP,2KACCF,CAAAA,QAAQ,EADT,sCACfG,KADe,iBACfA,KADe,uCAGIJ,CAAAA,WAAW,CAACK,GAAZ,CAAgB,SAAhB,CAA2B,CAC9CC,MAAM,CAAE,CAAEH,IAAI,CAAJA,IAAF,CADsC,CAC5BI,OAAO,CAAE,CACvBC,aAAa,kBAAYJ,KAAZ,CADU,CADmB,CAA3B,CAHJ,QAGbK,QAHa,+CAQZA,QAAQ,CAACC,IARG,iEAUbC,CAAAA,KAAK,aAVQ,sEAAH,kBAAXT,CAAAA,WAAW,4CAAjB,CAqBP,MAAO,IAAMU,CAAAA,iBAAiB,2FAAG,kBAAOC,EAAP,iLACLZ,CAAAA,QAAQ,EADH,wCACrBG,KADqB,kBACrBA,KADqB,yCAGFJ,CAAAA,WAAW,CAACK,GAAZ,mBAA2BQ,EAA3B,EAAiC,CACpDN,OAAO,CAAE,CACLC,aAAa,kBAAYJ,KAAZ,CADR,CAD2C,CAAjC,CAHE,QAGnBK,QAHmB,iDAQlBA,QAAQ,CAACC,IARS,oEAUnBC,CAAAA,KAAK,cAVc,wEAAH,kBAAjBC,CAAAA,iBAAiB,8CAAvB","sourcesContent":["import AxiosClient from \"./AxiosClient\"\nimport getToken from \"./TokenFetcher\"\n\nexport interface picture {\n    id: string,\n    cropped_picture: string,\n}\n\nexport interface imagePage {\n    hasMore: boolean,\n    page: number,\n    pageCount: number,\n    pictures: picture[],\n}\n\nexport const fetchImages = async (page: number): Promise<imagePage> => {\n    const { token } = await getToken()\n    try {\n        const response = await AxiosClient.get('/images', {\n            params: { page }, headers: {\n                authorization: `Bearer ${token}`\n            }\n        })\n        return response.data\n    } catch (error) {\n        throw Error(error)\n    }\n}\n\nexport interface imageDetail {\n    author: string,\n    camera: string,\n    full_picture: string,\n    tags: string,\n}\n\nexport const fetchImageDetails = async (id: string): Promise<imageDetail> => {\n    const { token } = await getToken()\n    try {\n        const response = await AxiosClient.get(`/images/${id}`, {\n            headers: {\n                authorization: `Bearer ${token}`\n            }\n        })\n        return response.data\n    } catch (error) {\n        throw Error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}
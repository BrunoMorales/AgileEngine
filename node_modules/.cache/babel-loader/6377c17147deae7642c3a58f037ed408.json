{"ast":null,"code":"import AxiosClient from \"./AxiosClient\";\nimport getToken from \"./TokenFetcher\";\nexport const getImages = page => {\n  const token = getToken();\n  const images = AxiosClient.get('/images', {\n    params: {\n      page\n    },\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  }).then(imageList => imageList);\n  return images;\n};\nexport const getImageDetails = async id => {\n  const token = await getToken();\n\n  try {\n    const response = await AxiosClient.get('/images', {\n      params: {\n        id\n      },\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    return response;\n  } catch (error) {\n    throw Error(error);\n  }\n};","map":{"version":3,"sources":["/Users/brunomorales/Documents/Personal/Agileengine/file-displayer/src/utils/ImageFetcher.ts"],"names":["AxiosClient","getToken","getImages","page","token","images","get","params","headers","authorization","then","imageList","getImageDetails","id","response","error","Error"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAQA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAkB;AACvC,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAMI,MAAM,GAAGL,WAAW,CACrBM,GADU,CACN,SADM,EACK;AACZC,IAAAA,MAAM,EAAE;AAAEJ,MAAAA;AAAF,KADI;AACMK,IAAAA,OAAO,EAAE;AACvBC,MAAAA,aAAa,EAAG,UAASL,KAAM;AADR;AADf,GADL,EAMVM,IANU,CAONC,SAAD,IAAeA,SAPR,CAAf;AAUA,SAAON,MAAP;AACH,CAbM;AAeP,OAAO,MAAMO,eAAe,GAAG,MAAOC,EAAP,IAAsB;AACjD,QAAMT,KAAK,GAAG,MAAMH,QAAQ,EAA5B;;AACA,MAAI;AACA,UAAMa,QAAQ,GAAG,MAAMd,WAAW,CAACM,GAAZ,CAAgB,SAAhB,EAA2B;AAC9CC,MAAAA,MAAM,EAAE;AAAEM,QAAAA;AAAF,OADsC;AAC9BL,MAAAA,OAAO,EAAE;AACrBC,QAAAA,aAAa,EAAG,UAASL,KAAM;AADV;AADqB,KAA3B,CAAvB;AAKA,WAAOU,QAAP;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMC,KAAK,CAACD,KAAD,CAAX;AACH;AACJ,CAZM","sourcesContent":["import AxiosClient from \"./AxiosClient\"\nimport getToken from \"./TokenFetcher\"\n\nexport interface apiImage {\n    id: string\n    src: string\n}\n\n\nexport const getImages = (page: number) => {\n    const token = getToken()\n    const images = AxiosClient\n        .get('/images', {\n            params: { page }, headers: {\n                authorization: `Bearer ${token}`\n            }\n        })\n        .then(\n            (imageList) => imageList\n        )\n\n    return images\n}\n\nexport const getImageDetails = async (id: string) => {\n    const token = await getToken()\n    try {\n        const response = await AxiosClient.get('/images', {\n            params: { id }, headers: {\n                authorization: `Bearer ${token}`\n            }\n        })\n        return response\n    } catch (error) {\n        throw Error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}
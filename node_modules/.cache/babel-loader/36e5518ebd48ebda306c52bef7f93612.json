{"ast":null,"code":"var _jsxFileName = \"/Users/brunomorales/Documents/Personal/Agileengine/file-displayer/src/components/ImageDisplayer/ImageDisplayer.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchImages } from \"../../utils/ImageFetcher\";\n\nconst ImageDisplayer = ({\n  page\n}) => {\n  const [currentPage, setCurrentPage] = useState();\n  const loadedPages = [];\n  useEffect(() => {\n    fetchImages(page).then(response => {\n      setCurrentPage(response);\n    });\n  }, [page]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"hola\"));\n};\n\nexport default ImageDisplayer;","map":{"version":3,"sources":["/Users/brunomorales/Documents/Personal/Agileengine/file-displayer/src/components/ImageDisplayer/ImageDisplayer.tsx"],"names":["React","useState","useEffect","fetchImages","ImageDisplayer","page","currentPage","setCurrentPage","loadedPages","then","response"],"mappings":";AAAA,OAAOA,KAAP,IAAkCC,QAAlC,EAAyDC,SAAzD,QAA0E,OAA1E;AACA,SAASC,WAAT,QAAuC,0BAAvC;;AAOA,MAAMC,cAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAExE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAMO,WAAwB,GAAG,EAAjC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACE,IAAD,CAAX,CACKI,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,cAAc,CAACG,QAAD,CAAd;AACH,KAHL;AAIH,GALQ,EAKN,CAACL,IAAD,CALM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,CAlBD;;AAoBA,eAAeD,cAAf","sourcesContent":["import React, { ReactElement, FC, useState, useCallback, useEffect } from \"react\";\nimport { fetchImages, imagePage } from \"../../utils/ImageFetcher\";\n\ninterface imageDisplayerProps {\n    page: number\n}\n\n\nconst ImageDisplayer: FC<imageDisplayerProps> = ({ page }): ReactElement => {\n\n    const [currentPage, setCurrentPage] = useState<imagePage | undefined>()\n    const loadedPages: imagePage[] = []\n\n    useEffect(() => {\n        fetchImages(page)\n            .then(response => {\n                setCurrentPage(response)\n            })\n    }, [page])\n\n\n    return (\n        <section>\n            <p>hola</p>\n        </section>\n    )\n}\n\nexport default ImageDisplayer"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/brunomorales/Documents/Personal/Agileengine/AgileEngine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import ImageDisplayer from\"../../components/ImageDisplayer\";import{fetchImages}from\"../../utils/ImageFetcher\";var Main=function Main(){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),pageCount=_useState4[0],setPageCount=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),pictures=_useState6[0],setPictures=_useState6[1];useEffect(function(){fetchImages(page).then(function(response){var pictures=response.pictures,pageCount=response.pageCount;setPictures(pictures);setPageCount(pageCount);});},[]);useEffect(function(){fetchImages(page).then(function(response){var pictures=response.pictures;setPictures(pictures);});},[page]);return/*#__PURE__*/React.createElement(\"main\",{className:\"py-10 px-5\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"text-xl mb-8\"},/*#__PURE__*/React.createElement(\"strong\",null,\"AgileEngine Interview\")),/*#__PURE__*/React.createElement(\"div\",{className:\"flex flex-row justify-between mb-8\"},/*#__PURE__*/React.createElement(\"button\",{className:\"bg-blue-400 rounded px-2 py-1 md:px-4 md:py-2\",onClick:function onClick(){return page>1&&setPage(page-1);}},\"Previous\"),/*#__PURE__*/React.createElement(\"p\",null,\"Current page: \",page),/*#__PURE__*/React.createElement(\"button\",{className:\"bg-blue-400 rounded px-2 py-1 md:px-4 md:py-2\",onClick:function onClick(){return page<pageCount&&setPage(page+1);}},\"Next\")),/*#__PURE__*/React.createElement(ImageDisplayer,{pictures:pictures}));};export default Main;","map":{"version":3,"sources":["/Users/brunomorales/Documents/Personal/Agileengine/AgileEngine/src/pages/Main/Main.tsx"],"names":["React","useState","useEffect","ImageDisplayer","fetchImages","Main","page","setPage","pageCount","setPageCount","pictures","setPictures","then","response"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAkCC,QAAlC,CAA4CC,SAA5C,KAA6D,OAA7D,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,OAASC,WAAT,KAAqC,0BAArC,CAGA,GAAMC,CAAAA,IAAQ,CAAG,QAAXA,CAAAA,IAAW,EAAoB,eACTJ,QAAQ,CAAS,CAAT,CADC,wCAC1BK,IAD0B,eACpBC,OADoB,8BAECN,QAAQ,CAAS,CAAT,CAFT,yCAE1BO,SAF0B,eAEfC,YAFe,8BAGDR,QAAQ,CAAY,EAAZ,CAHP,yCAG1BS,QAH0B,eAGhBC,WAHgB,eAKjCT,SAAS,CAAC,UAAM,CACZE,WAAW,CAACE,IAAD,CAAX,CACKM,IADL,CACU,SAAAC,QAAQ,CAAI,IACNH,CAAAA,QADM,CACkBG,QADlB,CACNH,QADM,CACIF,SADJ,CACkBK,QADlB,CACIL,SADJ,CAEdG,WAAW,CAACD,QAAD,CAAX,CACAD,YAAY,CAACD,SAAD,CAAZ,CACH,CALL,EAMH,CAPQ,CAON,EAPM,CAAT,CASAN,SAAS,CAAC,UAAM,CACZE,WAAW,CAACE,IAAD,CAAX,CACKM,IADL,CACU,SAAAC,QAAQ,CAAI,IACNH,CAAAA,QADM,CACOG,QADP,CACNH,QADM,CAEdC,WAAW,CAACD,QAAD,CAAX,CACH,CAJL,EAMH,CAPQ,CAON,CAACJ,IAAD,CAPM,CAAT,CAUA,mBACI,4BAAM,SAAS,CAAC,YAAhB,eACI,0BAAI,SAAS,CAAC,cAAd,eACI,0DADJ,CADJ,cAOI,2BAAK,SAAS,CAAC,oCAAf,eACI,8BAAQ,SAAS,CAAC,+CAAlB,CAAkE,OAAO,CAAE,yBAAMA,CAAAA,IAAI,CAAG,CAAP,EAAYC,OAAO,CAACD,IAAI,CAAG,CAAR,CAAzB,EAA3E,aADJ,cAII,8CACmBA,IADnB,CAJJ,cAOI,8BAAQ,SAAS,CAAC,+CAAlB,CAAkE,OAAO,CAAE,yBAAMA,CAAAA,IAAI,CAAGE,SAAP,EAAoBD,OAAO,CAACD,IAAI,CAAG,CAAR,CAAjC,EAA3E,SAPJ,CAPJ,cAkBI,oBAAC,cAAD,EAAgB,QAAQ,CAAEI,QAA1B,EAlBJ,CADJ,CAsBH,CA9CD,CAiDA,cAAeL,CAAAA,IAAf","sourcesContent":["import React, { ReactElement, FC, useState, useEffect } from \"react\";\nimport ImageDisplayer from \"../../components/ImageDisplayer\";\nimport { fetchImages, picture } from \"../../utils/ImageFetcher\";\n\n\nconst Main: FC = (): ReactElement => {\n    const [page, setPage] = useState<number>(1)\n    const [pageCount, setPageCount] = useState<number>(1)\n    const [pictures, setPictures] = useState<picture[]>([])\n\n    useEffect(() => {\n        fetchImages(page)\n            .then(response => {\n                const { pictures, pageCount } = response\n                setPictures(pictures)\n                setPageCount(pageCount)\n            })\n    }, [])\n\n    useEffect(() => {\n        fetchImages(page)\n            .then(response => {\n                const { pictures } = response\n                setPictures(pictures)\n            })\n\n    }, [page])\n\n\n    return (\n        <main className='py-10 px-5'>\n            <h1 className='text-xl mb-8'>\n                <strong>\n                    AgileEngine Interview\n                </strong>\n            </h1>\n\n            <div className='flex flex-row justify-between mb-8'>\n                <button className='bg-blue-400 rounded px-2 py-1 md:px-4 md:py-2' onClick={() => page > 1 && setPage(page - 1)}>\n                    Previous\n                </button>\n                <p>\n                    Current page: {page}\n                </p>\n                <button className='bg-blue-400 rounded px-2 py-1 md:px-4 md:py-2' onClick={() => page < pageCount && setPage(page + 1)}>\n                    Next\n                </button>\n            </div>\n            <ImageDisplayer pictures={pictures} />\n        </main>\n    )\n}\n\n\nexport default Main"]},"metadata":{},"sourceType":"module"}